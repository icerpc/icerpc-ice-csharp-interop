name: Continuous Integration

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: ðŸ“¦ NuGet Cache
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: ðŸ”— Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "7.0.x"
    - name: Setup Ice 3.7
      run: |
        sudo mkdir -p /etc/apt/keyrings
        sudo curl -fsSL https://download.zeroc.com/GPG-KEY-zeroc-release-B6391CB2CFBA643D | sudo gpg --dearmor -o /etc/apt/keyrings/zeroc.gpg
        echo \
          "deb [signed-by=/etc/apt/keyrings/zeroc.gpg] https://download.zeroc.com/ice/3.7/ubuntu22.04 stable main" \
          | sudo tee /etc/apt/sources.list.d/zeroc-ice-3.7.list
        sudo apt-get update
        sudo apt-get install zeroc-ice-slice zeroc-ice-compilers
    - name: Check out IceRPC for C# repository
      uses: actions/checkout@master
      with:
        repository: zeroc-ice/icerpc-csharp
        token: ${{ secrets.ICERPC_CSHARP_READ_TOKEN }}
    - name: ðŸ”— Add GitHub NuGet repository
      run: dotnet nuget add source "https://nuget.pkg.github.com/zeroc-ice/index.json" -n GitHub -u ci --store-password-in-clear-text -p ${{ secrets.NUGET_API_TOKEN }}
    - name: ðŸ”— Restore dependencies
      run: dotnet restore
    - name: ðŸ”¨ Build
      run: dotnet build --no-restore ${{ inputs.dotnet-build-args }}
    - name: ðŸ§ª Test
      run: dotnet test --no-build --verbosity normal
